#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <ArduinoJson.h>

const char *ssid = "SangWon";
const char *password = "11111111";
const char *server = "144.24.90.181";
const String resourcePath = "/iot-comm/ws/fallback/seats";

void setup() {
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;

    // Construct the full URL
    String url = "http://" + String(server) + resourcePath;
    WiFiClient wifiClient;

    // Start connection with WiFi client
    http.begin(wifiClient, url);

    // Construct JSON payload  
    const size_t capacity = JSON_OBJECT_SIZE(2) + JSON_ARRAY_SIZE(1) + 2*JSON_OBJECT_SIZE(2);
    DynamicJsonDocument doc(capacity);

    doc["key"] = "verysecretadminkey";

    JsonArray seats = doc.createNestedArray("seats");
    JsonObject seat = seats.createNestedObject();
    seat["seat_id"] = 1; // Replace with your actual seat_id
    seat["is_active"] = true; // Replace with your actual is_active value

    // Serialize JSON to a string
    String jsonPayload;
    serializeJson(doc, jsonPayload);

    // Set HTTP method to PUT
    http.addHeader("Content-Type", "application/json"); 
    int httpCode = http.sendRequest("PUT", jsonPayload);

    if (httpCode > 0) {
      Serial.printf("[HTTP] PUT... code: %d\n", httpCode);

      if (httpCode == HTTP_CODE_OK) {
        String payload = http.getString();
        Serial.println(payload);
      }
    } else {
      Serial.printf("[HTTP] PUT... failed, error: %s\n", http.errorToString(httpCode).c_str());
    }

    // End the connection
    http.end();

    delay(5000); // Wait for 5 seconds before making the next request
  }
}
